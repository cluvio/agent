name: Create Cluvio Agent GitHub release

on: workflow_dispatch

env:
  CARGO_TERM_COLOR: always

jobs:
  build-x86_64-unknown-linux-musl:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository.
      uses: actions/checkout@v2

    - name: Install MUSL
      run: |
        sudo apt-get update
        sudo apt-get install -y musl-dev musl-tools

    - name: Install MUSL target
      run: rustup target add x86_64-unknown-linux-musl

    - name: Package agent.
      run: make build-agent-x86_64-unknown-linux-musl

    - run: echo AGENT_VERSION=$(make agent-version) >> $GITHUB_ENV

    - uses: actions/upload-artifact@v2
      with:
        name: agent-${{ env.AGENT_VERSION }}-x86_64-unknown-linux-musl.tar.xz
        path: "dist/agent-${{ env.AGENT_VERSION }}-x86_64-unknown-linux-musl.tar.xz"
        retention-days: 1

  build-aarch64-unknown-linux-musl:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository.
      uses: actions/checkout@v2

    - name: Install MUSL
      run: |
        sudo apt-get update
        sudo apt-get install -y musl-dev musl-tools gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu

    - name: Install MUSL target
      run: rustup target add aarch64-unknown-linux-musl

    - name: Package agent.
      run: make build-agent-aarch64-unknown-linux-musl

    - run: echo AGENT_VERSION=$(make agent-version) >> $GITHUB_ENV

    - uses: actions/upload-artifact@v2
      with:
        name: agent-${{ env.AGENT_VERSION }}-aarch64-unknown-linux-musl.tar.xz
        path: "dist/agent-${{ env.AGENT_VERSION }}-aarch64-unknown-linux-musl.tar.xz"
        retention-days: 1

  build-x86_64-apple-darwin:
    runs-on: macos-latest
    steps:
    - name: Checkout repository.
      uses: actions/checkout@v2

    - name: Install Apple Darwin target
      run: rustup target add x86_64-apple-darwin

    - name: Package agent.
      run: make build-agent-x86_64-apple-darwin
      env:
        MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
        MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
        MACOS_DEV_IDENTITY: ${{ secrets.MACOS_DEV_IDENTITY }}
        APPLE_DEV_ACCOUNT: ${{ secrets.APPLE_DEV_ACCOUNT }}
        APPLE_DEV_PASSWORD: ${{ secrets.APPLE_DEV_PASSWORD }}
        APP_NAME: ${{ secrets.APP_NAME }}

    - run: echo AGENT_VERSION=$(make agent-version) >> $GITHUB_ENV

    - uses: actions/upload-artifact@v2
      with:
        name: agent-${{ env.AGENT_VERSION }}-x86_64-apple-darwin.tar.xz
        path: "dist/agent-${{ env.AGENT_VERSION }}-x86_64-apple-darwin.tar.xz"
        retention-days: 1

  build-aarch64-apple-darwin:
    runs-on: macos-latest
    steps:
    - name: Checkout repository.
      uses: actions/checkout@v2

    - name: Install Apple Darwin target
      run: rustup target add aarch64-apple-darwin

    - name: Package agent.
      run: make build-agent-aarch64-apple-darwin
      env:
        MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
        MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
        MACOS_DEV_IDENTITY: ${{ secrets.MACOS_DEV_IDENTITY }}
        APPLE_DEV_ACCOUNT: ${{ secrets.APPLE_DEV_ACCOUNT }}
        APPLE_DEV_PASSWORD: ${{ secrets.APPLE_DEV_PASSWORD }}
        APP_NAME: ${{ secrets.APP_NAME }}

    - run: echo AGENT_VERSION=$(make agent-version) >> $GITHUB_ENV

    - uses: actions/upload-artifact@v2
      with:
        name: agent-${{ env.AGENT_VERSION }}-aarch64-apple-darwin.tar.xz
        path: "dist/agent-${{ env.AGENT_VERSION }}-aarch64-apple-darwin.tar.xz"
        retention-days: 1

  build-x86_64-pc-windows-msvc:
    runs-on: windows-latest
    steps:
    - name: Checkout repository.
      uses: actions/checkout@v2

    - name: Install Windows target
      run: rustup target add x86_64-pc-windows-msvc

    - name: Package agent.
      run: make build-agent-x86_64-pc-windows-msvc

    - run: echo AGENT_VERSION=$(make agent-version) >> $GITHUB_ENV
      shell: bash

    - uses: actions/upload-artifact@v2
      with:
        name: agent-${{ env.AGENT_VERSION }}-x86_64-pc-windows-msvc.tar.xz
        path: "dist/agent-${{ env.AGENT_VERSION }}-x86_64-pc-windows-msvc.tar.xz"
        retention-days: 1

  release:
    runs-on: ubuntu-latest
    needs:
      - build-x86_64-unknown-linux-musl
      - build-aarch64-unknown-linux-musl
      - build-x86_64-apple-darwin
      - build-aarch64-apple-darwin
      - build-x86_64-pc-windows-msvc
    steps:
    - name: Checkout repository.
      uses: actions/checkout@v2

    - run: echo AGENT_VERSION=$(make agent-version) >> $GITHUB_ENV

    - uses: actions/download-artifact@v2
      with:
        name: agent-${{ env.AGENT_VERSION }}-aarch64-unknown-linux-musl.tar.xz
        path: dist/

    - uses: actions/download-artifact@v2
      with:
        name: agent-${{ env.AGENT_VERSION }}-aarch64-apple-darwin.tar.xz
        path: dist/

    - uses: actions/download-artifact@v2
      with:
        name: agent-${{ env.AGENT_VERSION }}-x86_64-unknown-linux-musl.tar.xz
        path: dist/

    - uses: actions/download-artifact@v2
      with:
        name: agent-${{ env.AGENT_VERSION }}-x86_64-apple-darwin.tar.xz
        path: dist/

    - uses: actions/download-artifact@v2
      with:
        name: agent-${{ env.AGENT_VERSION }}-x86_64-pc-windows-msvc.tar.xz
        path: dist/

    - name: Create release.
      shell: bash
      run: |
        (cd dist && sha256sum *.* > CHECKSUMS)
        gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"
        gh release create -d -t "v${{ env.AGENT_VERSION }}" -F CHANGELOG.md "v${{ env.AGENT_VERSION }}" dist/*


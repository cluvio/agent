name: Create Cluvio Setup release

on: workflow_dispatch

env:
  CARGO_TERM_COLOR: always

jobs:
  build-x86_64-unknown-linux-musl:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository.
      uses: actions/checkout@v2

    - name: Install MUSL
      run: sudo apt-get install -y musl-dev musl-tools

    - name: Install MUSL target
      run: rustup target add x86_64-unknown-linux-musl

    - name: Package setup.
      run: make build-setup-x86_64-unknown-linux-musl

    - run: echo SETUP_VERSION=$(make setup-version) >> $GITHUB_ENV

    - uses: actions/upload-artifact@v2
      with:
        name: setup-${{ env.SETUP_VERSION }}-x86_64-unknown-linux-musl
        path: "dist/cluvio-setup"
        retention-days: 1

  build-aarch64-unknown-linux-musl:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository.
      uses: actions/checkout@v2

    - name: Install MUSL
      run: sudo apt-get install -y musl-dev musl-tools gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu

    - name: Install MUSL target
      run: rustup target add aarch64-unknown-linux-musl

    - name: Package setup.
      run: make build-setup-aarch64-unknown-linux-musl

    - run: echo SETUP_VERSION=$(make setup-version) >> $GITHUB_ENV

    - uses: actions/upload-artifact@v2
      with:
        name: setup-${{ env.SETUP_VERSION }}-aarch64-unknown-linux-musl
        path: "dist/cluvio-setup"
        retention-days: 1

  build-x86_64-apple-darwin:
    runs-on: macos-latest
    steps:
    - name: Checkout repository.
      uses: actions/checkout@v2

    - name: Install Apple Darwin target
      run: rustup target add x86_64-apple-darwin

    - name: Package setup.
      run: make build-setup-x86_64-apple-darwin
      env:
        MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
        MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
        MACOS_DEV_IDENTITY: ${{ secrets.MACOS_DEV_IDENTITY }}
        APPLE_DEV_ACCOUNT: ${{ secrets.APPLE_DEV_ACCOUNT }}
        APPLE_DEV_PASSWORD: ${{ secrets.APPLE_DEV_PASSWORD }}
        APP_NAME: ${{ secrets.APP_NAME }}

    - run: echo SETUP_VERSION=$(make setup-version) >> $GITHUB_ENV

    - uses: actions/upload-artifact@v2
      with:
        name: setup-${{ env.SETUP_VERSION }}-x86_64-apple-darwin
        path: "dist/cluvio-setup"
        retention-days: 1

  build-aarch64-apple-darwin:
    runs-on: macos-latest
    steps:
    - name: Checkout repository.
      uses: actions/checkout@v2

    - name: Install Apple Darwin target
      run: rustup target add aarch64-apple-darwin

    - name: Package setup.
      run: make build-setup-aarch64-apple-darwin
      env:
        MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
        MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
        MACOS_DEV_IDENTITY: ${{ secrets.MACOS_DEV_IDENTITY }}
        APPLE_DEV_ACCOUNT: ${{ secrets.APPLE_DEV_ACCOUNT }}
        APPLE_DEV_PASSWORD: ${{ secrets.APPLE_DEV_PASSWORD }}
        APP_NAME: ${{ secrets.APP_NAME }}

    - run: echo SETUP_VERSION=$(make setup-version) >> $GITHUB_ENV

    - uses: actions/upload-artifact@v2
      with:
        name: setup-${{ env.SETUP_VERSION }}-aarch64-apple-darwin
        path: "dist/cluvio-setup"
        retention-days: 1

  build-x86_64-pc-windows-msvc:
    runs-on: windows-latest
    steps:
    - name: Checkout repository.
      uses: actions/checkout@v2

    - name: Install Windows target
      run: rustup target add x86_64-pc-windows-msvc

    - name: Package setup.
      run: make build-setup-x86_64-pc-windows-msvc

    - run: echo SETUP_VERSION=$(make setup-version) >> $GITHUB_ENV
      shell: bash

    - uses: actions/upload-artifact@v2
      with:
        name: setup-${{ env.SETUP_VERSION }}-x86_64-pc-windows-msvc.exe
        path: "dist/cluvio-setup.exe"
        retention-days: 1

  release:
    runs-on: ubuntu-latest
    needs:
      - build-x86_64-unknown-linux-musl
      - build-aarch64-unknown-linux-musl
      - build-x86_64-apple-darwin
      - build-aarch64-apple-darwin
      - build-x86_64-pc-windows-msvc
    steps:
    - name: Checkout repository.
      uses: actions/checkout@v2

    - run: echo SETUP_VERSION=$(make setup-version) >> $GITHUB_ENV

    - uses: actions/download-artifact@v2
      with:
        name: setup-${{ env.SETUP_VERSION }}-aarch64-unknown-linux-musl
        path: dist/cluvio-setup/${{ env.SETUP_VERSION }}/aarch64-unknown-linux-musl

    - uses: actions/download-artifact@v2
      with:
        name: setup-${{ env.SETUP_VERSION }}-x86_64-unknown-linux-musl
        path: dist/cluvio-setup/${{ env.SETUP_VERSION }}/x86_64-unknown-linux-musl

    - uses: actions/download-artifact@v2
      with:
        name: setup-${{ env.SETUP_VERSION }}-aarch64-apple-darwin
        path: dist/cluvio-setup/${{ env.SETUP_VERSION }}/aarch64-apple-darwin

    - uses: actions/download-artifact@v2
      with:
        name: setup-${{ env.SETUP_VERSION }}-x86_64-apple-darwin
        path: dist/cluvio-setup/${{ env.SETUP_VERSION }}/x86_64-apple-darwin

    - uses: actions/download-artifact@v2
      with:
        name: setup-${{ env.SETUP_VERSION }}-x86_64-pc-windows-msvc.exe
        path: dist/cluvio-setup/${{ env.SETUP_VERSION }}/x86_64-pc-windows-msvc

    - name: Copy artifacts to S3.
      run: aws --region eu-central-1 s3 cp dist s3://releases.cluvio.com/ --recursive
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

